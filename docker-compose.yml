version: "3.2"

services:
  server:
    container_name: server-api
    image: strapi/strapi
    volumes:
      - ./server:/srv/app
    ports:
      - '1337:1337'
    networks: 
      - net_observability

  web-app:
    container_name: web-app
    build:
      context: .
      dockerfile: ./.docker/Dockerfile
    stdin_open: true
    networks: 
      - net_observability
    ports:
      - 3000:3000
    volumes:
      - type: volume
        source: node_modules
        target: /usr/src/app/node_modules
      - type: bind
        source: ./web
        target: /usr/src/app
    depends_on: 
      - server

  elasticsearch:
    container_name: elasticsearch
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      discovery.type: single-node
    networks:
      - net_observability

  kibana:
    container_name: kibana
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - net_observability
    depends_on:
      - elasticsearch

  apm-server:
    container_name: apm-server
    build:
      context: apm-server/
      args:
        ELK_VERSION: $ELK_VERSION
    command:
      - --strict.perms=false
    volumes:
      - type: bind
        source: ./apm-server/config/apm-server.yml
        target: /usr/share/apm-server/apm-server.yml
        read_only: true
    ports:
      - '8200:8200'
    networks:
      - net_observability
    depends_on:
      - elasticsearch

networks:
  net_observability:
    driver: bridge

volumes:
  elasticsearch:
  node_modules: